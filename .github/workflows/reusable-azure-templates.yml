name: Azure - deploy

permissions:
      id-token: write
      contents: read

concurrency:
  group: 'reusable-azure-deploy'
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      AZURE_STORAGEACCOUNT_NAME:
        type: string
        description: 'Azure storage account name'
        required: false
  push:
    branches:
    - 'main'
    paths:
    - 'spa/src/**'
    - 'spa/Cargo.toml'
    - 'spa/styles/**'
    - 'spa/public/**'
    - 'spa/index.html'
    - 'spa/tailwind.config.js'

env:
  RUST_BACKTRACE: 'full'
  CARGO_TARGET: 'wasm32-unknown-unknown'
  LEPTOS_BIN_NAME: 'leptos'
  LEPTOS_SOURCE_PATH: 'spa'

jobs:
  rust_build_leptos:
    runs-on: ubuntu-latest
    steps:
    # Inputs
    - name: 'Show inputs'
      run: |
        echo AZURE_STORAGEACCOUNT_NAME : ${{ inputs.AZURE_STORAGEACCOUNT_NAME || vars.AZURE_STORAGEACCOUNT_NAME }}

    # Prase AZURE_MSI secret
    - name: Prase AZURE_MSI secret
      id: msiPrincipal
      env:
        SECRET: ${{ secrets.AZURE_MSI }}
      run: |
        clientId=$(echo $SECRET | jq -r '.["clientId"]')
        tenantId=$(echo $SECRET | jq -r '.["tenantId"]')
        subscriptionId=$(echo $SECRET | jq -r '.["id"] | split("/")[2]')
        principalId=$(echo $SECRET | jq -r '.["principalId"]')
        echo "::add-mask::$clientId"
        echo "::add-mask::$tenantId"
        echo "::add-mask::$subscriptionId"
        echo "::add-mask::$principalId"
        echo clientId=$clientId >> $GITHUB_OUTPUT
        echo tenantId=$tenantId >> $GITHUB_OUTPUT
        echo subscriptionId=$subscriptionId >> $GITHUB_OUTPUT
        echo objectId=$principalId >> $GITHUB_OUTPUT

    # Login
    - name: 'Azure login'
      uses: azure/login@v1
      with:
        client-id: ${{ steps.msiPrincipal.outputs.clientId }}
        tenant-id: ${{ steps.msiPrincipal.outputs.tenantId }}
        subscription-id: ${{ steps.msiPrincipal.outputs.subscriptionId }}

    # Make sure storage account exists
    - name: Locate storage account
      id: storageAccount
      run: |
        website=$(az storage account show --name ${{ inputs.AZURE_STORAGEACCOUNT_NAME || vars.AZURE_STORAGEACCOUNT_NAME }} --query primaryEndpoints.web --output tsv)
        echo website=${website:0:-1} >> $GITHUB_OUTPUT

    # Checkout
    - name: 'Checkout repository branch'
      uses: actions/checkout@v2

    # Update env.rs
    - name: Update env.rs
      run: |
        echo 'pub const CLIENT_ID: &str = "${{ vars.AUTH_CLIENT_ID }}";' > spa/src/env.rs;
        echo 'pub const ISSUER_URL: &str = "${{ vars.AUTH_ISSUER_URL }}";' >> spa/src/env.rs;
        echo 'pub const REDIRECT_URL: &str = "${{ steps.storageAccount.outputs.website }}/login";' >> spa/src/env.rs;
        echo 'pub const API_SCOPE: &str = "${{ vars.AUTH_API_SCOPE }}";' >> spa/src/env.rs;
        cat spa/src/env.rs

    # Update / Install Rust
    - name: 'Update / install rust'
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        target: ${{ env.CARGO_TARGET }}
        toolchain: stable
        default: true
        override: true

    # Cache name
    - name: 'Generate cache name'
      id: cache_name
      shell: bash
      run: |
        distro=$(lsb_release -si)
        version=$(lsb_release -sr)
        hash=($(sha1sum Cargo.lock))
        echo "distro=$distro" >> $GITHUB_OUTPUT
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "hash=$hash" >> $GITHUB_OUTPUT

    # Cache
    - name: 'Cache'
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{ steps.cache_name.outputs.distro }}-${{ steps.cache_name.outputs.version }}-cargo-${{ env.LEPTOS_BIN_NAME }}-${{ steps.cache_name.outputs.hash }}

    # Install dev tools
    - name: 'Install dev tools'
      shell: bash
      run: |
        pushd '${{ env.LEPTOS_SOURCE_PATH }}'
        npm install
        popd
        cargo install trunk

    # Build
    - name: 'Build Leptos SPA using Trunk'
      shell: bash
      run: |
        pushd '${{ env.LEPTOS_SOURCE_PATH }}'
        npx tailwindcss -i styles/input.css -o styles/tailwind.css --minify
        popd
        export TRUNK_BUILD_RELEASE=true
        trunk build

    # Archive
    - name: Archive dist directory
      uses: actions/upload-artifact@v3
      with:
        name: 'dist'
        path: 'dist/'

    # Deployment
    - name: Deploy static website to ${{ inputs.AZURE_STORAGEACCOUNT_NAME || vars.AZURE_STORAGEACCOUNT_NAME }}
      id: azureResources
      run: |
        az --version
        az storage blob service-properties update \
          --account-name ${{ inputs.AZURE_STORAGEACCOUNT_NAME || vars.AZURE_STORAGEACCOUNT_NAME }} \
          --static-website true \
          --404-document 'index.html' \
          --index-document 'index.html'

        az storage blob upload-batch \
          --account-name ${{ inputs.AZURE_STORAGEACCOUNT_NAME || vars.AZURE_STORAGEACCOUNT_NAME }} \
          --source 'dist' \
          --destination '$web' \
          --overwrite true

    # Logout
    - name: 'Azure logout'
      run: |
        az logout
      if: always()
